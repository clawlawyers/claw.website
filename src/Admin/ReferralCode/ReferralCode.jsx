import React, { useState, useEffect } from 'react';
import { NODE_API_ENDPOINT } from '../../utils/utils';
import Styles from './ReferralCode.module.css'
import DataTable from '../components/DataTable/DataTable';

const columns = [
  { field: 'id', headerName: 'ID', width: 200 },
  { field: 'redeemed', headerName: 'Redeemed', width: 120 },
  { field: 'generatedByPhoneNumber', headerName: 'Generated By Phone Number', width: 200 },
  // { field: 'generatedByFirstName', headerName: 'Generated By First Name', width: 200 },
  // { field: 'generatedByLastName', headerName: 'Generated By Last Name', width: 200 },
  { field: 'redeemedByPhoneNumber', headerName: 'Redeemed By Phone Number', width: 200 },
  // { field: 'redeemedByFirstName', headerName: 'Redeemed By First Name', width: 200 },
  // { field: 'redeemedByLastName', headerName: 'Redeemed By Last Name', width: 200 },
  { field: 'createdAt', headerName: 'Created At', width: 120,
    valueFormatter: (params) => new Date(params.value).toLocaleDateString() },
  { field: 'updatedAt', headerName: 'Updated At', width: 120,
    valueFormatter: (params) => new Date(params.value).toLocaleDateString() },
];

export default function ReferralCode() {

  const [referralCode, setReferralCode] = useState([]);
  
  useEffect(() => {
    const fetchreferralCodes = async () => {
      try {
        const response = await fetch(`${NODE_API_ENDPOINT}/admin/referralcode`);
        if (!response.ok) {
          throw new Error('Failed to fetch orders');
        }
        const dataObject = await response.json();
        const dataArray = Object.values(dataObject);
        setReferralCode(dataArray);
      } catch (error) {
        console.error('Fetch error:', error);
      }
    };

    fetchreferralCodes();
  }, []);

  const rows = referralCode.map((code, index) => ({
    id: code.id,
    redeemed: code.redeemed,
    generatedByPhoneNumber: code.generatedBy.phoneNumber,
    generatedByFirstName: code.generatedBy.firstName,
    generatedByLastName: code.generatedBy.lastName,
    redeemedByPhoneNumber: code.redeemedBy.phoneNumber,
    redeemedByFirstName: code.redeemedBy.firstName,
    redeemedByLastName: code.redeemedBy.lastName,
    createdAt: code.createdAt,
    updatedAt: code.updatedAt,
  }));

  return (
    <div className="orders">
      <div className={Styles.info}>
        <h1>Referral Codes</h1>
      </div>
      <DataTable slug="referralCode" columns={columns} rows={rows}/>
    </div>
  )
}